// PREPROCESSING EXPECTATIONS: comments removed, only spaces and newlines as whitespace, divided lines expanded,
// continued lines continued, bad section lines and off sections removed, terminators, skipped lines,
// files inserted, user-defined variables evaluated and substituted, mathematical expressions evaluated and substituted,
// and blank lines removed.
// TODO: revise this to ensure only the truly significantly context-dependent parts are removed.
// See the 'reading control' portion of the PHITS manual.
inp: section*

section: title
       | parameters
       | sources
       | materials
       | surfaces
       | cells
       | transforms
       // | temperature
       // | mattimechange
       // | magneticfield
       // | electromagneticfield
       // | deltaray
       // | trackstructure
       // | supermirror
       // | elasticoption
       // | datamax
       // | fragdata
       // | importance
       // | weightwindow
       // | wwbias
       // | forcedcollisions
       // | repeatedcollisions
       // | volume
       // | multiplier
       // | matnamecolor
       // | regname
       // | counter
       // | timer
       // | ttrack
       // | tcross
       // | tpoint
       // | tdeposit
       // | tdeposittwo
       // | theat
       // | tyield
       // | tproduct
       // | tdpa
       // | tlet
       // | tsed
       // | ttime
       // | tinteract
       // | tdchain
       // | twwg
       // | twwbg
       // | tvolume
       // | tuserdefined
       // | tgshow
       // | trshow
       // | tthreedshow


title: _TITLENAME CONTENTS
_TITLENAME: / *\[ *t *i *t *l *e *\] *\n/
CONTENTS: /[^[]*/

_PARAMNAME: / *\[ *p *a *r *a *m *e *t *e *r *s *\] *\n/
parameters: _PARAMNAME assignment*


_SOURCENAME: / *\[ *s *o *u *r *c *e *\] *\n/
sources: _SOURCENAME [source
	 	     | (assignment* (/ *<source> *= */ computation / *\n/ source)+ assignment*)]




source: "s-type" " "* "=" " "* POSINT " "* "\n" (assignment | etype | ttype | atype)*



_MATNAME: / *\[ *m *a *t *e *r *i *a *l *\] *\n/ 
materials: _MATNAME columntitle? (material | thermlib | chemical)+

material: (((" "* "MAT[" " "* POSINT " "* "]" " "*)
	  | (" "* "M" POSINT " "*)) (((element computation) | assignmentinl) /[ \n]+/)+)

thermlib: / *MT/ POSINT / *[\.0-9a-z]/
element: (/[0-9]*[a-z]+/ | /[a-z]+-[0-9]+/ | /[0-9]+/) /\.[0-9][0-9][a-z]/
chemical: " "* "chem" " "* "=" " "* (((element computation) | asignmentinl) "[ \n]"+)+ 



_SURFNAME: / *\[ *s *u *r *f *a *c *e *\] *\n/ 
surfaces: _SURFNAME (" "* ((computation | surfsymbol) " "+)+ "\n")+

surfsymbol: (/[a-z]/ | "/")+


// lattice-universe is sus, as always
_CELLNAME: / *\[ *c *e *l *l *\] *\n/
cells: _CELLNAME (" "* ((computation " "+) ~ 3 celldef | computation " "+ likebut) " "+ closeassignmentinl " "* "\n")+

celldef: INT | celldef " "+ celldef | celldef " "* ":" " "* celldef | "#" celldef | "(" " "* celldef " "* ")"

likebut: "like" " "+ POSINT " "+ "but" " "+


_TFNAME: / *\[ *t *r *a *n *s *f *o *r *m *\] *\n/
transforms: _TFNAME " "* "*"? "tr" POSINT (" " | "\n")+ (computation (" " | "\n")+) ~ 13



assignment: " "* iden / *= */ vals / *\n/
assignmentinl: iden / *= */ vals
closeassignmentinl: iden "=" vals
iden: IDENTIFIER | (IDENTIFIER "(" POSINT ")")
vals: computation | FILENAME
	  
regiongrp: POSINT | /( */ (POSINT " "*) / *)/ | /\{ */ POSINT
latuniv: // TODO; lattice universe specification like ( 6 < 10[1 0 0] < u=3 )

etype: e1 | e2 | e3 | e4 | e5 | e6 | e7 | e20 | e25 | e28

e1: " "* "e-type" " "* "=" " "* /1|8|11|18|21|22|31|32/ " "* "\n" assignment grid

e4: " "* "e-type" " "* "=" " "* /4|9|14|19|23|24|33|34/  " "* "\n" assignment grid assignment grid

e2: " "* "e-type" " "* "=" " "* /2|12/  " "* "\n" assignment ~ 4

e3: " "* "e-type" " "* "=" " "* /3/  " "* "\n" assignment ~ 5

e5: " "* "e-type" " "* "=" " "* /5|15/  " "* "\n" assignment ~ 4


e6: " "* "e-type" " "* "=" " "* /6|16/  " "* "\n" assignment ~ 5 grid

e7: " "* "e-type" " "* "=" " "* /7/  " "* "\n" assignment ~ 6 grid

e20: " "* "e-type" " "* "=" " "* /20/  " "* "\n" assignment

e25: " "* "e-type" " "* "=" " "* /25|26/  " "* "\n" assignment ~ 14

e28: " "* "e-type" " "* "=" " "* /28|29/  " "* "\n" assignment ~ 7



atype: p1 | p4 | p5 | p6

p1: " "* "a-type" " "* "=" " "* /1|11/  " "* "\n" assignment grid 


p4: " "* "a-type" " "* "=" " "* /4|14/  " "* "\n" assignment grid assignment grid

p5: " "* "a-type" " "* "=" " "* /5|15/  " "* "\n" assignment ~ 4

p6: " "* "a-type" " "* "=" " "* /6|16/  " "* "\n" assignment ~ 3 grid 
  

ttype: t0 | t3 | t4 | t5 | t6  | t100

t0: " "* "t-type" " "* "=" " "* /0|1|2/  " "* "\n" assignment ~ 5


t3: " "* "t-type" " "* "=" " "* /3/  " "* "\n" assignment grid

t4: " "* "t-type" " "* "=" " "* /0|1|2/  " "* "\n" assignment grid assignment grid

t5: " "* "t-type" " "* "=" " "* /5/  " "* "\n" assignment ~ 4

t6: " "* "t-type" " "* "=" " "* /6/  " "* "\n" assignment ~ 5 grid
    
t100: " "* "t-type" " "* "=" " "* /100/  " "* "\n" assignment ~ 2




grid: ((computation " "+)+ "\n")+
columntitle: (IDENTIFIER " "+)+

IDENTIFIER: /[a-z0-9]+/
POSINT: /[0-9]+/
INT: /-?[0-9]+/

function{name}: name "(" computation ")"
binop{sym}: computation sym computation

plus: binop{/+/}
float: function{float}
computation: " "* (NUMBER | /pi/ | /x/ | USRCONSTANT
  	       	  | binop{/+/} | binop{/-/} | binop{/\*/} | binop{/\//} | binop{/\*\*/}
	      	  | function{/float/} | function{/nt/} | function{/abs/} | function{/exp/} | function{/log/} | function{/log10/}
	      	  | function{/max/} | function{/min/} | function{/mod/} | function{/nint/} | function{/sign/} | function{/sqrt/}
	      	  | function{/acos/} | function{/asin/} | function{/atan/} | function{/atan2/} | function{/cos/}
	      	  | function{/cosh/} | function{/sin/} | function{/sinh/} | function{/tan/} | function{/tanh/}) " "*
escapedcomputation: "{" computation "}"
NUMBER: ["-"] POSINT ["." [POSINT]] ["e" ["-"] POSINT]

USRCONSTANT: /c[0-9]+/
usrconstantdef: /c[0-9]+\[/ computation /]/

FILENAME: /[a-z0-9()]+/ // TODO; note that array entries can be invoked inside filenames cf. man pg. 54
